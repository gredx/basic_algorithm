  items.cpp
  test.cpp
h:\repo\basic_algorithm\basic_algorithm\items.h(80): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  h:\repo\basic_algorithm\basic_algorithm\test.cpp(73): note: 参见对正在编译的函数 模板 实例化“void ly::make_heap<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>>(RandomIt,RandomIt)”的引用
          with
          [
              _Ty=double,
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
          ]
h:\repo\basic_algorithm\basic_algorithm\items.h(96): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  h:\repo\basic_algorithm\basic_algorithm\test.cpp(80): note: 参见对正在编译的函数 模板 实例化“void ly::push_heap<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>>(RandomIt,RandomIt)”的引用
          with
          [
              _Ty=double,
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
          ]
h:\repo\basic_algorithm\basic_algorithm\items.h(103): warning C4244: “参数”: 从“__int64”转换到“int”，可能丢失数据
h:\repo\basic_algorithm\basic_algorithm\items.h(113): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  h:\repo\basic_algorithm\basic_algorithm\test.cpp(98): note: 参见对正在编译的函数 模板 实例化“void ly::quick_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>>(RandomIt,RandomIt)”的引用
          with
          [
              _Ty=double,
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
          ]
h:\repo\basic_algorithm\basic_algorithm\items.h(157): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  h:\repo\basic_algorithm\basic_algorithm\test.cpp(144): note: 参见对正在编译的函数 模板 实例化“void ly::merge_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>>(RandomIt,RandomIt)”的引用
          with
          [
              _Ty=int,
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
h:\repo\basic_algorithm\basic_algorithm\items.h(62): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
  h:\repo\basic_algorithm\basic_algorithm\items.h(82): note: 参见对正在编译的函数 模板 实例化“void ly::push_down<RandomIt>(RandomIt,RandomIt,size_t)”的引用
          with
          [
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
          ]
  h:\repo\basic_algorithm\basic_algorithm\test.cpp(73): note: 参见对正在编译的函数 模板 实例化“void ly::make_heap<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>>(RandomIt,RandomIt)”的引用
          with
          [
              _Ty=double,
              RandomIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
          ]
  正在生成代码...
  basic_algorithm.vcxproj -> H:\repo\basic_algorithm\x64\Debug\basic_algorithm.exe
